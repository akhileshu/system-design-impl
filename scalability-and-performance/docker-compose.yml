version: "3"
services:
  nodeapp:
    image: akhilesh/scalability-and-performance
    environment:
        - CLUSTER_MODE=true
        # - CLUSTER_MODE=false

    # ports:
    #   - "30-32:3000"
    # deploy:
    #   replicas: 3

    ports:
      - "30:3000"
    deploy:
      replicas: 1 # Only one container, internally it forks N workers when using cluster module

  nginx-proxy-server:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  # https://github.com/ratibor78/influxdb-grafana-docker/blob/master/docker-compose.yml

  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=k6

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  influxdb-data:
  grafana-data:
# This will start 3 containers mapped to ports 30, 31, and 32.
# docker compose up --scale nodeapp=3

# If not using Compose, you can just run 3 containers manually with different ports.
# docker run -d --name node1 -p 30:3000 akhilesh/scalability-and-performance
# docker run -d --name node2 -p 31:3000 akhilesh/scalability-and-performance
# docker run -d --name node3 -p 32:3000 akhilesh/scalability-and-performance
